name: OpenWrt Builder

on:
  repository_dispatch:
  workflow_dispatch:

env:
  REPO_URL: https://github.com/lianzeliu/King
  REPO_BRANCH: main
  FEEDS_CONF: feeds.conf.default
  CONFIG_FILE: .config
  DIY_P1_SH: diy-part1.sh
  DIY_P2_SH: diy-part2.sh
  UPLOAD_BIN_DIR: false
  UPLOAD_FIRMWARE: true
  UPLOAD_RELEASE: true
  TZ: Asia/Shanghai

jobs:
  build:
    runs-on: ubuntu-22.04

    steps:
    - name: Checkout
      uses: actions/checkout@main

    - name: Initialization environment
      env:
        DEBIAN_FRONTEND: noninteractive
      run: |
        sudo rm -rf /etc/apt/sources.list.d/* /usr/share/dotnet /usr/local/lib/android /opt/ghc /opt/hostedtoolcache/CodeQL
        sudo docker image prune --all --force
        sudo -E apt-get -qq update
        sudo -E apt-get -qq install ack antlr3 asciidoc autoconf automake autopoint binutils bison build-essential bzip2 ccache cmake cpio curl device-tree-compiler fastjar flex gawk gettext gcc-multilib g++-multilib git gperf haveged help2man intltool libc6-dev-i386 libelf-dev libfuse-dev libglib2.0-dev libgmp3-dev libltdl-dev libmpc-dev libmpfr-dev libncurses5-dev libncursesw5-dev libpython3-dev libreadline-dev libssl-dev libtool lrzsz mkisofs msmtp ninja-build p7zip p7zip-full patch pkgconf python2.7 python3 python3-pyelftools python3-setuptools qemu-utils rsync scons squashfs-tools subversion swig texinfo uglifyjs upx-ucl unzip vim wget xmlto xxd zlib1g-dev
        sudo -E apt-get -qq autoremove --purge
        sudo -E apt-get -qq clean
        sudo timedatectl set-timezone "$TZ"
        sudo mkdir -p /workdir
        sudo chown $USER:$GROUPS /workdir
               # 清理不必要的文件和目录以增加可用空间
        sudo rm -rf /var/lib/apt/lists/*
        sudo rm -rf /tmp/*
        sudo rm -rf /var/tmp/*
        sudo rm -rf /usr/share/man/*
        sudo rm -rf /usr/share/doc/*
        sudo rm -rf /usr/share/info/*
        sudo rm -rf /usr/share/locale/*
        sudo rm -rf /usr/share/zoneinfo/*
        sudo rm -rf /usr/share/i18n/*
        sudo rm -rf /usr/share/X11/*
        sudo rm -rf /usr/share/fonts/*
        sudo rm -rf /usr/share/icons/*
        sudo rm -rf /usr/share/sounds/*
        sudo rm -rf /usr/share/themes/*
        sudo rm -rf /usr/share/backgrounds/*
        sudo rm -rf /usr/share/gnome/*
        sudo rm -rf /usr/share/kde4/*
        sudo rm -rf /usr/share/kde5/*
        sudo rm -rf /usr/share/kf5/*
        sudo rm -rf /usr/share/qt4/*
        sudo rm -rf /usr/share/qt5/*
        sudo rm -rf /usr/share/wayland/*
        sudo rm -rf /usr/share/xsessions/*
        sudo rm -rf /usr/share/xwayland/*
        sudo rm -rf /usr/share/xorg/*
        sudo rm -rf /usr/share/xscreensaver/*
        sudo rm -rf /usr/share/xserver-xorg/*
        sudo rm -rf /usr/share/xterm/*
        sudo rm -rf /usr/share/xvfb/*
        sudo rm -rf /usr/share/xvnc/*
        sudo rm -rf /usr/share/xvnc4/*
        sudo rm -rf /usr/share/xvnc5/*
        sudo rm -rf /usr/share/xvnc6/*
        sudo rm -rf /usr/share/xvnc7/*
        sudo rm -rf /usr/share/xvnc8/*
        sudo rm -rf /usr/share/xvnc9/*
        sudo rm -rf /usr/share/xvnc10/*
        sudo rm -rf /usr/share/xvnc11/*
        sudo rm -rf /usr/share/xvnc12/*
        sudo rm -rf /usr/share/xvnc13/*
        sudo rm -rf /usr/share/xvnc14/*
        sudo rm -rf /usr/share/xvnc15/*
        sudo rm -rf /usr/share/xvnc16/*
        sudo rm -rf /usr/share/xvnc17/*
        sudo rm -rf /usr/share/xvnc18/*
        sudo rm -rf /usr/share/xvnc19/*
        sudo rm -rf /usr/share/xvnc20/*
        sudo rm -rf /usr/share/xvnc21/*
        sudo rm -rf /usr/share/xvnc22/*
        sudo rm -rf /usr/share/xvnc23/*
        sudo rm -rf /usr/share/xvnc24/*
        sudo rm -rf /usr/share/xvnc25/*
        sudo rm -rf /usr/share/xvnc26/*
        sudo rm -rf /usr/share/xvnc27/*
        sudo rm -rf /usr/share/xvnc28/*
        sudo rm -rf /usr/share/xvnc29/*
        sudo rm -rf /usr/share/xvnc30/*
        sudo rm -rf /usr/share/xvnc31/*
        sudo rm -rf /usr/share/xvnc32/*
        sudo rm -rf /usr/share/xvnc33/*
        sudo rm -rf /usr/share/xvnc34/*
        sudo rm -rf /usr/share/xvnc35/*
        sudo rm -rf /usr/share/xvnc36/*
        sudo rm -rf /usr/share/xvnc37/*
        sudo rm -rf /usr/share/xvnc38/*
        sudo rm -rf /usr/share/xvnc39/*
        sudo rm -rf /usr/share/xvnc40/*
        sudo rm -rf /usr/share/xvnc41/*
        sudo rm -rf /usr/share/xvnc42/*
        sudo rm -rf /usr/share/xvnc43/*
        sudo rm -rf /usr/share/xvnc44/*
        sudo rm -rf /usr/share/xvnc45/*
        sudo rm -rf /usr/share/xvnc46/*
        sudo rm -rf /usr/share/xvnc47/*
        sudo rm -rf /usr/share/xvnc48/*
        sudo rm -rf /usr/share/xvnc49/*
        sudo rm -rf /usr/share/xvnc50/*
        sudo rm -rf /usr/share/xvnc51/*
        sudo rm -rf /usr/share/xvnc52/*
        sudo rm -rf /usr/share/xvnc53/*
        sudo rm -rf /usr/share/xvnc54/*
        sudo rm -rf /usr/share/xvnc55/*
        sudo rm -rf /usr/share/xvnc56/*
        sudo rm -rf /usr/share/xvnc57/*
        sudo rm -rf /usr/share/xvnc58/*
        sudo rm -rf /usr/share/xvnc59/*
        sudo rm -rf /usr/share/xvnc60/*
        sudo rm -rf /usr/share/xvnc61/*
        sudo rm -rf /usr/share/xvnc62/*
        sudo rm -rf /usr/share/xvnc63/*
        sudo rm -rf /usr/share/xvnc64/*
        sudo rm -rf /usr/share/xvnc65/*
        sudo rm -rf /usr/share/xvnc66/*
        sudo rm -rf /usr/share/xvnc67/*
        sudo rm -rf /usr/share/xvnc68/*
        sudo rm -rf /usr/share/xvnc69/*
        sudo rm -rf /usr/share/xvnc70/*
        sudo rm -rf /usr/share/xvnc71/*
        sudo rm -rf /usr/share/xvnc72/*
        sudo rm -rf /usr/share/xvnc73/*
        sudo rm -rf /usr/share/xvnc74/*
        sudo rm -rf /usr/share/xvnc75/*
        sudo rm -rf /usr/share/xvnc76/*
        sudo rm -rf /usr/share/xvnc77/*
        sudo rm -rf /usr/share/xvnc78/*
        sudo rm -rf /usr/share/xvnc79/*
        sudo rm -rf /usr/share/xvnc80/*
        sudo rm -rf /usr/share/xvnc81/*
        sudo rm -rf /usr/share/xvnc82/*
        sudo rm -rf /usr/share/xvnc83/*
        sudo rm -rf /usr/share/xvnc84/*
        sudo rm -rf /usr/share/xvnc85/*
        sudo rm -rf /usr/share/xvnc86/*
        sudo rm -rf /usr/share/xvnc87/*
        sudo rm -rf /usr/share/xvnc88/*
        sudo rm -rf /usr/share/xvnc89/*
        sudo rm -rf /usr/share/xvnc90/*
        sudo rm -rf /usr/share/xvnc91/*
        sudo rm -rf /usr/share/xvnc92/*
        sudo rm -rf /usr/share/xvnc93/*
        sudo rm -rf /usr/share/xvnc94/*
        sudo rm -rf /usr/share/xvnc95/*
        sudo rm -rf /usr/share/xvnc96/*
        sudo rm -rf /usr/share/xvnc97/*
        sudo rm -rf /usr/share/xvnc98/*
        sudo rm -rf /usr/share/xvnc99/*
        sudo rm -rf /usr/share/xvnc100/*
        sudo rm -rf /usr/share/xvnc101/*
        sudo rm -rf /usr/share/xvnc102/*
        sudo rm -rf /usr/share/xvnc103/*
        sudo rm -rf /usr/share/xvnc104/*

    - name: Clone source code
      working-directory: /workdir
      run: |
        df -hT $PWD
        git clone $REPO_URL -b $REPO_BRANCH openwrt
        ln -sf /workdir/openwrt $GITHUB_WORKSPACE/openwrt

    - name: Load custom feeds
      run: |
        [ -e $FEEDS_CONF ] && mv $FEEDS_CONF openwrt/feeds.conf.default
        chmod +x $DIY_P1_SH
        cd openwrt
        $GITHUB_WORKSPACE/$DIY_P1_SH

    - name: Update feeds
      run: cd openwrt && ./scripts/feeds update -a

    - name: Install feeds
      run: cd openwrt && ./scripts/feeds install -a

    - name: Load custom configuration
      run: |
        [ -e files ] && mv files openwrt/files
        [ -e $CONFIG_FILE ] && mv $CONFIG_FILE openwrt/.config
        chmod +x $DIY_P2_SH
        cd openwrt
        $GITHUB_WORKSPACE/$DIY_P2_SH
    - name: Download package
      id: package
      run: |
        cd openwrt
        make defconfig
        make download -j8
        find dl -size -1024c -exec ls -l {} \;
        find dl -size -1024c -exec rm -f {} \;

    - name: Compile the firmware
      id: compile
      run: |
        cd openwrt
        echo -e "$(nproc) thread compile"
        make -j$(nproc) || make -j1 || make -j1 V=s
        echo "status=success" >> $GITHUB_OUTPUT
        grep '^CONFIG_TARGET.*DEVICE.*=y' .config | sed -r 's/.*DEVICE_(.*)=y/\1/' > DEVICE_NAME
        [ -s DEVICE_NAME ] && echo "DEVICE_NAME=_$(cat DEVICE_NAME)" >> $GITHUB_ENV
        echo "FILE_DATE=_$(date +"%Y%m%d%H%M")" >> $GITHUB_ENV

    - name: Check space usage
      if: (!cancelled())
      run: df -hT

    - name: Upload bin directory
      uses: actions/upload-artifact@main
      if: steps.compile.outputs.status == 'success' && env.UPLOAD_BIN_DIR == 'true'
      with:
        name: OpenWrt_bin${{ env.DEVICE_NAME }}${{ env.FILE_DATE }}
        path: openwrt/bin

    - name: Organize files
      id: organize
      if: env.UPLOAD_FIRMWARE == 'true' && !cancelled()
      run: |
        cd openwrt/bin/targets/*/*
        rm -rf packages
        echo "FIRMWARE=$PWD" >> $GITHUB_ENV
        echo "status=success" >> $GITHUB_OUTPUT

    - name: Upload firmware directory
      uses: actions/upload-artifact@main
      if: steps.organize.outputs.status == 'success' && !cancelled()
      with:
        name: OpenWrt_firmware${{ env.DEVICE_NAME }}${{ env.FILE_DATE }}
        path: ${{ env.FIRMWARE }}

    - name: Generate release tag
      id: tag
      if: env.UPLOAD_RELEASE == 'true' && !cancelled()
      run: |
        echo "release_tag=$(date +"%Y.%m.%d-%H%M")" >> $GITHUB_OUTPUT
        touch release.txt
        [ ${UPLOAD_GOFILE} = true && ${{ steps.gofile.outputs.url }} ] && echo "🔗 [GoFile](${{ steps.gofile.outputs.url }})" >> release.txt
        echo "status=success" >> $GITHUB_OUTPUT

    - name: Upload firmware to release
      uses: softprops/action-gh-release@master
      if: steps.tag.outputs.status == 'success' && !cancelled()
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ steps.tag.outputs.release_tag }}
        body_path: release.txt
        files: ${{ env.FIRMWARE }}/*

    - name: Delete workflow runs
      uses: Mattraks/delete-workflow-runs@main
      with:
        retain_days: 0
        keep_minimum_runs: 2

    - name: Remove old Releases
      uses: dev-drprasad/delete-older-releases@master
      if: env.UPLOAD_RELEASE == 'true' && !cancelled()
      with:
        keep_latest: 3
        delete_tags: true
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
